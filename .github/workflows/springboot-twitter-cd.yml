name: CD - Build and Push Docker Image

on:
  push:
    branches: [ main ]

jobs:
  springboot-twitter-cd:
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'
          cache-dependency-path: |
            **/*.gradle*
            **/gradle-wrapper.properties

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/springboot-twitter-linux:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: springboot-twitter-cd
    runs-on: ubuntu-24.04
    steps:
      - name: Deploy to EC2 via SSH (docker run)
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            docker stop springboot-twitter || true
            docker rm springboot-twitter || true
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/springboot-twitter-linux:latest
            docker run -d \
              --name springboot-twitter \
              -p 8080:8080 \
              -e SPRING_DATASOURCE_URL=jdbc:mysql://${{ secrets.RDS_ENDPOINT }}:3306/twitterdb \
              -e SPRING_DATASOURCE_USERNAME=${{ secrets.RDS_USERNAME }} \
              -e SPRING_DATASOURCE_PASSWORD=${{ secrets.RDS_PASSWORD }} \
              ${{ secrets.DOCKER_HUB_USERNAME }}/springboot-twitter-linux:latest